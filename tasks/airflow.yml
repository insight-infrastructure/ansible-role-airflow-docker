---

- name: Check if repo exists
  stat:
    path: "/home/{{ username }}/airflow-docker-compose"
  register: airflow_git

- name: Clone airflow-docker-compose repo
  git:
    repo: "https://github.com/insight-infrastructure/airflow-docker-compose"
    dest: "/home/{{ username }}/airflow"
  become_user: "{{ username }}"
  when: airflow_git.stat.exists == false

- name: Create cert directory if it does not exist
  file:
    path: "/home/{{ username }}/airflow/certs"
    state: directory
    mode: '0600'
    owner: "{{ username }}"
    group: "{{ group_name }}"

- name: Move cert to certs
  command: cp /etc/letsencrypt/live/{{ fqdn }}/fullchain.pem /home/{{ username }}/airflow/certs/fullchain.pem

- name: Move key to certs
  command: cp /etc/letsencrypt/live/{{ fqdn }}/privkey.pem /home/{{ username }}/airflow/certs/privkey.pem

- name: Rename override file per the type of airflow deployment (ie worker)
  command: mv /home/{{ username }}/airflow/docker-compose.worker.override /home/{{ username }}/airflow/docker-compose.override
  when: airflow_node_type == 'worker'

- name: Start node application via docker-compose
  shell:
    cmd: docker-compose up -d
    chdir: "/home/{{ username }}/airflow"

- name: Render env file
  template:
    src: "{{ role_path }}/templates/.env.j2"
    dest: /home/{{ admin_user }}/.env
    mode: '0644'
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"
  tags: update-configs


# TODO: systemd?
#- name: Copy service
#  template:
#    src: airflow.service.j2
#    dest: /etc/systemd/system/airflow.service
#    owner: root
#    group: root
#    mode: 0600
#
#- name: Enable and start service
#  systemd:
#    name: airflow
#    enabled: yes
#    state: started
